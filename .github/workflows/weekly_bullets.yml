name: Weekly Bullets

on:
  schedule:
    # Run @ 5:00 AM ( 2:00 PM UTC) every Monday
    - cron: '0 14 * * 1'
  workflow_dispatch:
    inputs:
      start_time:
        description: "Start time of the bullet report"
        required: false
      sender:
        description: "The sender's email address"
        required: false
        default: UAF-asf-apd@alaska.edu
      recipients:
        description: "A SPACE separated list of email address that should receive the bullet report"
        required: false
      mattermost_channel:
        description: "Post report to this ASF MatterMost channel"
        required: false

env:
  AWS_DEFAULT_REGION: us-west-2
  AWS_ACCESS_KEY_ID: ${{ secrets.V2_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.V2_AWS_SECRET_ACCESS_KEY }}
  MATTERMOST_PAT: ${{ secrets.MATTERMOST_PAT }}

jobs:
  bullets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          python-version: 3.9
          activate-environment: bullets
          environment-file: environment.yml

      - name: Install bullets
        shell: bash -l {0}
        run: |
          python -m pip install .

      - name: Generate report
        env:
          GITHUB_TOKEN: ${{ secrets.TOOLS_BOT_PAK }}
          START_TIME: ${{ github.event.inputs.start_time }}
        shell: bash -l {0}
        run: |
          if [[ -z "${START_TIME}" ]]; then
            bullets
          else
            bullets --search-start "${START_TIME}"
          fi

      - name: Upload report artifact
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: 'report.md'

      - name: Send scheduled messages
        if: github.event_name == 'schedule'
        shell: bash -l {0}
        run: |
          export EMAIL_SUBJECT=$(sed -n 3p report.md)
          sendit report.md UAF-asf-apd@alaska.edu "${EMAIL_SUBJECT}" kahogenson@alaska.edu
          postit report.md

      - name: Send dispatched messages
        if: github.event_name == 'workflow_dispatch'
        env:
          SENDER_EMAIL: ${{ github.event.inputs.sender }}
          RECIPIENT_EMAILS: ${{ github.event.inputs.recipients }}
          MATTERMOST_CHANNEL: ${{ github.event.inputs.mattermost_channel }}
        shell: bash -l {0}
        run: |
          if [[ -z "${RECIPIENT_EMAILS}" ]]; then
            echo "Skipping sendit because no recipient email(s) provided"
          else
            export EMAIL_SUBJECT=$(sed -n 3p report.md)
            sendit report.md ${SENDER_EMAIL} "${EMAIL_SUBJECT}" ${RECIPIENT_EMAILS}
          fi
          if [[ -z "${MATTERMOST_CHANNEL}" ]]; then
            echo "Skipping postit because no MatterMost channel provided"
          else
            postit report.md --channel ${MATTERMOST_CHANNEL}
          fi
